# Defining data folder stucture
folder_structure:
  #data_root_folder: &BASE ./data
  data_root_folder: &BASE /media/sz/Data/Connected_Lecturers/Opal
  raw_data_folder: &RAW !join [*BASE, /raw]
  file_folder: &FILE_FOLDER !join [*RAW, /files]
  content_folder: &CONTENT_FOLDER !join [*RAW, /content]
  processed_data_folder: &PREPROCESSED !join [*BASE, /processed]

# Referencing the modules containing modules
stages_module_path:
    - ../src/general/
    - ../src/opal/

# Defining stages and parameters
stages:
  - name: Generate data folder structure
    class: ProvideDataFolders

  - name: Collect raw data from OPAL 
    class: CollectOPALOERdocuments
    parameters:
      repo_file_name: OPAL_repos.p
      file_file_name: &OPALSINGLEFILES OPAL_files.p
      json_file_name: OPAL_raw_data.json
      json_url: https://bildungsportal.sachsen.de/opal/oer/content.json
      force_run: False

  - name: Aggregate basic features from OPAL
    class: Preprocessing
    parameters: 
      file_file_name_input: *OPALSINGLEFILES
      file_file_name_output: &OPALSINGLEFILESATTRIB OPAL_files_attrib.p
      force_run: False

  - name: Download files
    class: DownloadOERFromOPAL
    parameters: 
      file_file_name_input: *OPALSINGLEFILESATTRIB
      file_file_name_output: &OPALSINGLEFILESDOWNLOADS OPAL_files_downloads.p
      file_types: ['pptx', 'pdf', 'docx', 'xlsx', 'md']
      force_run: False

  - name: Extract meta data from OPAL files
    class: MetaDataExtraction
    parameters: 
      file_file_name_input: *OPALSINGLEFILESATTRIB
      file_file_name_output: &OPALSINGLEFILESMETA OPAL_files_meta.p
      file_types: ['pptx', 'pdf', 'docx', 'xlsx', 'md']
      force_run: False

  - name: Extract content
    class: ExtractFileContent
    parameters: 
      file_file_name_input: *OPALSINGLEFILESATTRIB
      file_file_name_output: &OPALSINGLEAICONTENT OPAL_content.p
      force_run: False
      file_types: ['pptx', 'pdf', 'docx', 'xlsx', 'md']

  - name: Filter file list by content data
    class: FilterFilesByContent
    parameters:
      file_file_name_input: *OPALSINGLEFILESATTRIB
      file_file_content: *OPALSINGLEAICONTENT
      file_file_name_output: &OPALSINGLEFILESFILTERED OPAL_files_filtered.p
      force_run: False

  - name: Provide embeddings
    class: AIEmbeddingsGeneration
    parameters: 
      file_file_name_input: *OPALSINGLEFILESFILTERED
      file_file_name_output: &OPALCHROMAFILES OPAL_embeddings_files.p
      force_run: False
      file_types: ['pptx', 'pdf', 'docx', 'xlsx', 'md']

  - name: Extract meta data from content
    class: AIMetaDataExtraction
    parameters: 
      file_file_name_input: *OPALSINGLEFILESFILTERED
      file_file_name_output: &OPALSINGLEAIMETA OPAL_ai_meta.p
      prompts_file_name: prompts.json
      model_name: llama3:70b
      force_run: True
      file_types: ['pptx', 'pdf', 'docx', 'xlsx', 'md']

  - name: Check Keywords
    class: GNDKeywordCheck
    parameters: 
      file_file_name_input: *OPALSINGLEAIMETA
      file_file_name_output: &OPALKEYWORDS OPAL_checked_keywords.p
      force_run: True

  - name: Determine similarity between files
    class: DocumentSimilarity
    parameters: 
      file_file_name_input: *OPALSINGLEFILESFILTERED
      file_file_name_output: &OPALAISIMILARITY OPAL_ai_similaritiy.p
      force_run: True